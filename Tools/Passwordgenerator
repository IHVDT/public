<!DOCTYPE html>
<html lang="nl">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Password Generator</title>
  <style>
    /* Basisstijl: donker, modern en strak */
    body {
      margin: 0;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      background: #121212;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      color: #ffffff;
    }
    .container {
      background: #1f1f1f;
      padding: 2rem;
      border-radius: 1rem;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
      max-width: 400px;
      width: 100%;
      text-align: center;
    }
    h1 {
      margin-bottom: 1.5rem;
      font-size: 1.75rem;
      letter-spacing: 1px;
    }
    .options {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
      margin-bottom: 1.5rem;
      text-align: left;
    }
    .options label {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      cursor: pointer;
    }
    .options input[type="range"] {
      width: 100%;
    }
    #password {
      background: #2b2b2b;
      border: none;
      padding: 0.75rem;
      border-radius: 0.5rem;
      width: calc(100% - 1.5rem);
      margin-bottom: 1rem;
      font-size: 1rem;
      color: #e0e0e0;
    }
    button {
      background: #3b82f6;
      border: none;
      padding: 0.75rem 1.5rem;
      border-radius: 0.5rem;
      font-size: 1rem;
      cursor: pointer;
      transition: background 0.3s ease;
      color: #ffffff;
    }
    button:hover {
      background: #2563eb;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Wachtwoord Generator</h1>
    <div class="options">
      <label>
        Lengte: <span id="lengthValue">12</span>
        <input type="range" id="length" min="4" max="32" value="12" />
      </label>
      <label><input type="checkbox" id="uppercase" checked /> Hoofdletters (A-Z)</label>
      <label><input type="checkbox" id="lowercase" checked /> Kleine letters (a-z)</label>
      <label><input type="checkbox" id="numbers" checked /> Cijfers (0-9)</label>
      <label><input type="checkbox" id="symbols" /> Symbolen (!@#$%)</label>
    </div>
    <input type="text" id="password" readonly placeholder="Je wachtwoord verschijnt hier" />
    <button id="generate">Genereer Wachtwoord</button>
  </div>

  <script>
    const lengthSlider = document.getElementById('length');
    const lengthValue = document.getElementById('lengthValue');
    const uppercaseEl = document.getElementById('uppercase');
    const lowercaseEl = document.getElementById('lowercase');
    const numbersEl = document.getElementById('numbers');
    const symbolsEl = document.getElementById('symbols');
    const passwordEl = document.getElementById('password');
    const generateBtn = document.getElementById('generate');

    const randomFunc = {
      lower: () => String.fromCharCode(Math.floor(Math.random() * 26) + 97),
      upper: () => String.fromCharCode(Math.floor(Math.random() * 26) + 65),
      number: () => String.fromCharCode(Math.floor(Math.random() * 10) + 48),
      symbol: () => {
        const symbols = '!@#$%^&*()_+~`|}{[]:;?><,./-=';
        return symbols[Math.floor(Math.random() * symbols.length)];
      }
    };

    lengthSlider.addEventListener('input', () => {
      lengthValue.textContent = lengthSlider.value;
    });

    generateBtn.addEventListener('click', () => {
      const length = +lengthSlider.value;
      const hasLower = lowercaseEl.checked;
      const hasUpper = uppercaseEl.checked;
      const hasNumber = numbersEl.checked;
      const hasSymbol = symbolsEl.checked;

      passwordEl.value = generatePassword(hasLower, hasUpper, hasNumber, hasSymbol, length);
    });

    function generatePassword(lower, upper, number, symbol, length) {
      let generatedPassword = '';
      const typesCount = lower + upper + number + symbol;
      const typesArr = [
        { lower },
        { upper },
        { number },
        { symbol }
      ].filter(item => Object.values(item)[0]);

      if (typesCount === 0) return '';

      for (let i = 0; i < length; i += typesCount) {
        typesArr.forEach(type => {
          const funcName = Object.keys(type)[0];
          generatedPassword += randomFunc[funcName]();
        });
      }

      return generatedPassword.slice(0, length);
    }
  </script>
</body>
</html>
